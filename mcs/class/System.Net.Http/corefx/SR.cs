//
// This file was generated by resx2sr tool
//

partial class SR
{
	public const string net_unknown_prefix = "The URI prefix is not recognized.";
	public const string net_reqsubmitted = "This operation cannot be performed after the request has been submitted.";
	public const string net_io_timeout_use_ge_zero = "Timeout can be only be set to 'System.Threading.Timeout.Infinite' or a value >= 0.";
	public const string net_writestarted = "This property cannot be set after writing has started.";
	public const string net_badmethod = "Cannot set null or blank methods on request.";
	public const string net_io_invalidasyncresult = "The IAsyncResult object was not returned from the corresponding asynchronous method on this class.";
	public const string net_io_invalidendcall = "{0} can only be called once for each asynchronous operation.";
	public const string net_servererror = "The remote server returned an error: ({0}) {1}.";
	public const string net_reqaborted = "The request was aborted: The request was canceled.";
	public const string net_MethodNotImplementedException = "This method is not implemented by this class.";
	public const string net_OperationNotSupportedException = "This operation is not supported.";
	public const string net_PropertyNotImplementedException = "This property is not implemented by this class.";
	public const string net_nouploadonget = "Cannot send a content-body with this verb-type.";
	public const string net_repcall = "Cannot re-call BeginGetRequestStream/BeginGetResponse while a previous call is still in progress.";
	public const string net_invalid_enum = "The specified value is not valid in the '{0}' enumeration.";
	public const string net_securityprotocolnotsupported = "The requested security protocol is not supported.";
	public const string net_requestaborted = "The request was aborted: {0}.";
	public const string net_clsmall = "The Content-Length value must be greater than or equal to zero.";
	public const string net_webstatus_Timeout = "The operation has timed out.";
	public const string net_baddate = "The value of the date string in the header is invalid.";
	public const string net_connarg = "Keep-Alive and Close may not be set using this property.";
	public const string net_fromto = "The From parameter cannot be less than To.";
	public const string net_needchunked = "TransferEncoding requires the SendChunked property to be set to true.";
	public const string net_no100 = "100-Continue may not be set using this property.";
	public const string net_nochunked = "Chunked encoding must be set via the SendChunked property.";
	public const string net_nottoken = "The supplied string is not a valid HTTP token.";
	public const string net_rangetoosmall = "The From or To parameter cannot be less than 0.";
	public const string net_rangetype = "A different range specifier has already been added to this request.";
	public const string net_toosmall = "The specified value must be greater than 0.";
	public const string net_wrongversion = "Only HTTP/1.0 and HTTP/1.1 version requests are currently supported.";
	public const string net_WebHeaderInvalidControlChars = "Specified value has invalid Control characters.";
	public const string net_WebHeaderInvalidCRLFChars = "Specified value has invalid CRLF characters.";
	public const string net_WebHeaderInvalidHeaderChars = "Specified value has invalid HTTP Header characters.";
	public const string net_timeout = "The operation has timed out.";
	public const string net_completed_result = "This operation cannot be performed on a completed asynchronous result object.";
	public const string net_PropertyNotSupportedException = "This property is not supported by this class.";
	public const string net_InvalidStatusCode = "The server returned a status code outside the valid range of 100-599.";
	public const string net_io_timeout_use_gt_zero = "Timeout can be only be set to 'System.Threading.Timeout.Infinite' or a value > 0.";
	public const string net_ftp_servererror = "The remote server returned an error: {0}.";
	public const string net_ftp_active_address_different = "The data connection was made from an address that is different than the address to which the FTP connection was made.";
	public const string net_ftp_invalid_method_name = "FTP Method names cannot be null or empty.";
	public const string net_ftp_invalid_renameto = "The RenameTo filename cannot be null or empty.";
	public const string net_ftp_invalid_response_filename = "The server returned the filename ({0}) which is not valid.";
	public const string net_ftp_invalid_status_response = "The status response ({0}) is not expected in response to '{1}' command.";
	public const string net_ftp_invalid_uri = "The requested URI is invalid for this FTP command.";
	public const string net_ftp_no_defaultcreds = "Default credentials are not supported on an FTP request.";
	public const string net_ftp_response_invalid_format = "The response string '{0}' has invalid format.";
	public const string net_ftp_server_failed_passive = "The server failed the passive mode request with status response ({0}).";
	public const string net_ftp_unsupported_method = "This method is not supported.";
	public const string net_ftp_protocolerror = "The underlying connection was closed: The server committed a protocol violation";
	public const string net_ftp_receivefailure = "The underlying connection was closed: An unexpected error occurred on a receive";
	public const string net_webstatus_NameResolutionFailure = "The remote name could not be resolved";
	public const string net_webstatus_ConnectFailure = "Unable to connect to the remote server";
	public const string net_ftpstatuscode_ServiceNotAvailable = "Service not available, closing control connection.";
	public const string net_ftpstatuscode_CantOpenData = "Can't open data connection";
	public const string net_ftpstatuscode_ConnectionClosed = "Connection closed; transfer aborted";
	public const string net_ftpstatuscode_ActionNotTakenFileUnavailableOrBusy = "File unavailable (e.g., file busy)";
	public const string net_ftpstatuscode_ActionAbortedLocalProcessingError = "Local error in processing";
	public const string net_ftpstatuscode_ActionNotTakenInsufficientSpace = "Insufficient storage space in system";
	public const string net_ftpstatuscode_CommandSyntaxError = "Syntax error, command unrecognized";
	public const string net_ftpstatuscode_ArgumentSyntaxError = "Syntax error in parameters or arguments";
	public const string net_ftpstatuscode_CommandNotImplemented = "Command not implemented";
	public const string net_ftpstatuscode_BadCommandSequence = "Bad sequence of commands";
	public const string net_ftpstatuscode_NotLoggedIn = "Not logged in";
	public const string net_ftpstatuscode_AccountNeeded = "Need account for storing files";
	public const string net_ftpstatuscode_ActionNotTakenFileUnavailable = "File unavailable (e.g., file not found, no access)";
	public const string net_ftpstatuscode_ActionAbortedUnknownPageType = "Page type unknown";
	public const string net_ftpstatuscode_FileActionAborted = "Exceeded storage allocation (for current directory or data set)";
	public const string net_ftpstatuscode_ActionNotTakenFilenameNotAllowed = "File name not allowed";
	public const string net_http_httpmethod_format_error = "The format of the HTTP method is invalid.";
	public const string net_http_reasonphrase_format_error = "The reason phrase must not contain new-line characters.";
	public const string net_http_copyto_array_too_small = "The number of elements is greater than the available space from arrayIndex to the end of the destination array.";
	public const string net_http_headers_not_found = "The given header was not found.";
	public const string net_http_headers_single_value_header = "Cannot add value because header '{0}' does not support multiple values.";
	public const string net_http_headers_invalid_header_name = "The header name format is invalid.";
	public const string net_http_headers_invalid_value = "The format of value '{0}' is invalid.";
	public const string net_http_headers_not_allowed_header_name = "Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.";
	public const string net_http_headers_invalid_host_header = "The specified value is not a valid 'Host' header string.";
	public const string net_http_headers_invalid_from_header = "The specified value is not a valid 'From' header string.";
	public const string net_http_headers_invalid_etag_name = "The specified value is not a valid quoted string.";
	public const string net_http_headers_invalid_range = "Invalid range. At least one of the two parameters must not be null.";
	public const string net_http_headers_no_newlines = "New-line characters in header values must be followed by a white-space character.";
	public const string net_http_content_buffersize_exceeded = "Cannot write more bytes to the buffer than the configured maximum buffer size: {0}.";
	public const string net_http_content_no_task_returned = "The async operation did not return a System.Threading.Tasks.Task object.";
	public const string net_http_content_stream_already_read = "The stream was already consumed. It cannot be read again.";
	public const string net_http_content_readonly_stream = "The stream does not support writing.";
	public const string net_http_content_invalid_charset = "The character set provided in ContentType is invalid. Cannot read content as string using an invalid character set.";
	public const string net_http_content_stream_copy_error = "Error while copying content to a stream.";
	public const string net_http_argument_empty_string = "The value cannot be null or empty.";
	public const string net_http_client_request_already_sent = "The request message was already sent. Cannot send the same request message multiple times.";
	public const string net_http_operation_started = "This instance has already started one or more requests. Properties can only be modified before sending the first request.";
	public const string net_http_client_execution_error = "An error occurred while sending the request.";
	public const string net_http_client_absolute_baseaddress_required = "The base address must be an absolute URI.";
	public const string net_http_client_invalid_requesturi = "An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.";
	public const string net_http_client_http_baseaddress_required = "Only 'http' and 'https' schemes are allowed.";
	public const string net_http_parser_invalid_base64_string = "Value '{0}' is not a valid Base64 string. Error: {1}";
	public const string net_http_handler_noresponse = "Handler did not return a response message.";
	public const string net_http_handler_norequest = "A request message must be provided. It cannot be null.";
	public const string net_http_message_not_success_statuscode = "Response status code does not indicate success: {0} ({1}).";
	public const string net_http_content_field_too_long = "The field cannot be longer than {0} characters.";
	public const string net_http_log_headers_no_newlines = "Value for header '{0}' contains invalid new-line characters. Value: '{1}'.";
	public const string net_http_log_headers_invalid_quality = "The 'q' value is invalid: '{0}'.";
	public const string net_http_log_headers_wrong_email_format = "Value '{0}' is not a valid email address. Error: {1}";
	public const string net_http_handler_not_assigned = "The inner handler has not been assigned.";
	public const string net_http_invalid_enable_first = "The {0} property must be set to '{1}' to use this property.";
	public const string net_http_content_buffersize_limit = "Buffering more than {0} bytes is not supported.";
	public const string net_http_value_not_supported = "The value '{0}' is not supported for property '{1}'.";
	public const string net_http_io_read = "The read operation failed, see inner exception.";
	public const string net_http_io_read_incomplete = "Unable to read data from the transport connection. The connection was closed before all data could be read. Expected {0} bytes, read {1} bytes.";
	public const string net_http_io_write = "The write operation failed, see inner exception.";
	public const string net_http_chunked_not_allowed_with_empty_content = "'Transfer-Encoding: chunked' header can not be used when content object is not specified.";
	public const string net_http_invalid_cookiecontainer = "When using CookieUsePolicy.UseSpecifiedCookieContainer, the CookieContainer property must not be null.";
	public const string net_http_invalid_proxyusepolicy = "When using a non-null Proxy, the WindowsProxyUsePolicy property must be set to WindowsProxyUsePolicy.UseCustomProxy.";
	public const string net_http_invalid_proxy = "When using WindowsProxyUsePolicy.UseCustomProxy, the Proxy property must not be null.";
	public const string net_http_handler_nocontentlength = "The content length of the request content can't be determined. Either set TransferEncodingChunked to true, load content into buffer, or set MaxRequestContentBufferSize.";
	public const string net_http_value_must_be_greater_than = "The specified value must be greater than {0}.";
	public const string MailHeaderFieldInvalidCharacter = "An invalid character was found in the mail header: '{0}'.";
	public const string MailAddressInvalidFormat = "The specified string is not in the form required for an e-mail address.";
	public const string MailHeaderFieldMalformedHeader = "The mail header is malformed.";
	public const string InvalidHeaderName = "An invalid character was found in header name.";
	public const string net_cookie_attribute = "The '{0}'='{1}' part of the cookie is invalid.";
	public const string net_http_unix_invalid_certcallback_option = "The libcurl library in use ({0}) and its SSL backend (\"{1}\") do not support custom handling of certificates. A libcurl built with OpenSSL is required.";
	public const string net_http_unix_invalid_credential = "The libcurl library in use ({0}) does not support different credentials for different authentication schemes.";
	public const string net_http_unix_https_support_unavailable_libcurl = "The libcurl library in use ({0}) does not support HTTPS.";
	public const string ArgumentOutOfRange_FileLengthTooBig = "Specified file length was too large for the file system.";
	public const string IO_FileExists_Name = "The file '{0}' already exists.";
	public const string IO_FileNotFound = "Unable to find the specified file.";
	public const string IO_FileNotFound_FileName = "Could not find file '{0}'.";
	public const string IO_PathNotFound_NoPathName = "Could not find a part of the path.";
	public const string IO_PathNotFound_Path = "Could not find a part of the path '{0}'.";
	public const string IO_PathTooLong = "The specified file name or path is too long, or a component of the specified path is too long.";
	public const string IO_SharingViolation_File = "The process cannot access the file '{0}' because it is being used by another process.";
	public const string IO_SharingViolation_NoFileName = "The process cannot access the file because it is being used by another process.";
	public const string UnauthorizedAccess_IODenied_NoPathName = "Access to the path is denied.";
	public const string UnauthorizedAccess_IODenied_Path = "Access to the path '{0}' is denied.";
	public const string net_http_content_no_concurrent_reads = "The stream does not support concurrent read operations.";
	public const string net_http_username_empty_string = "The username for a credential object cannot be null or empty.";
	public const string net_http_no_concurrent_io_allowed = "The stream does not support concurrent I/O read or write operations.";
	public const string net_http_unix_invalid_response = "The server returned an invalid or unrecognized response.";
	public const string net_http_unix_handler_disposed = "The handler was disposed of while active operations were in progress.";
	public const string net_http_buffer_insufficient_length = "The buffer was not long enough.";
	public const string net_http_response_headers_exceeded_length = "The HTTP response headers length exceeded the set limit of {0} bytes.";
	public const string ArgumentOutOfRange_NeedPosNum = "Positive number required.";
	public const string NotSupported_UnreadableStream = "Stream does not support reading.";
	public const string NotSupported_UnwritableStream = "Stream does not support writing.";
	public const string ObjectDisposed_StreamClosed = "Can not access a closed Stream.";
	public const string net_http_libcurl_callback_notsupported = "The handler does not support custom handling of certificates with this combination of libcurl ({0}) and its SSL backend (\"{1}\").";
	public const string net_http_libcurl_clientcerts_notsupported = "The handler does not support client authentication certificates with this combination of libcurl ({0}) and its SSL backend (\"{1}\").";
	public const string net_http_libcurl_revocation_notsupported = "The handler does not support changing revocation settings with this combination of libcurl ({0}) and its SSL backend (\"{1}\").";
}
